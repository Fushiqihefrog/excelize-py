on: [push, pull_request]
name: build

jobs:

  test:
    strategy:
      matrix:
        go-version: [1.23.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.13]
        targetplatform: [x64]

    runs-on: ${{ matrix.os }}

    steps:

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: false

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get dependencies
      run: |
        env GO111MODULE=on go vet ./...
        pip install coverage

    - name: Build
      run: go build -v .

    - name: Test on Windows
      env:
        CGO_ENABLED: 1
      if: matrix.os == 'windows-latest'
      run: go build -buildmode=c-shared -o libexcelize.amd64.windows.dll main.go && coverage run -m unittest

    - name: Test on Linux
      env:
        CGO_ENABLED: 1
      if: matrix.os == 'ubuntu-latest'
      run: go build -buildmode=c-shared -o libexcelize.amd64.linux.so main.go && coverage run -m unittest

    - name: Test on macOS
      env:
        CGO_ENABLED: 1
      if: matrix.os == 'macos-latest'
      run: go build -buildmode=c-shared -o libexcelize.arm64.darwin.dylib main.go && coverage run -m unittest

    - name: Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        flags: unittests
        name: codecov-umbrella
